
// example Sensei Request
{
	// any o' lucene text query
	"query" : null,

	// paging parameters
	"paging" :{
		"offset" : 0,
		"count" : 10
	},
	
	// group by parameters   
	"groupBy" : {
		"field" : "category",
		"count" : 3
	},

	// selections
	"selections" : {
		"color":{
			// intersection flag, if false, union is assumed
			"intersect" : false,
			// selected values
			"values":["red","green"],
			// exclude values
			"not":[],
			// selection properties
			"props":{}
		}
	},

	// facet parameters
	"facets":{
		"category":{
			// maximum number of facet values to return
			"max" : 10,
			// minimum hit count for a given facet value
			"minCount": 1,
			// expand sibling facet values
			"expand" : false,
			// facet ordering, possible values: "hits", "val", defaults to "hits"
			"orderBy" : "hits"
		}
	},

    // facet initialization parameters for runtime facets
	"facetInit":{
		"network" : {
			// parameter
			"srcId" :{
				// parameter type, valid values are: "int","string","boolean","long","bytes","double", default: "string"
				"type" : "int",
				// parameter values
				"values" : ["1234"]
			}
		}
	},

	// sort parameters
	"sorts":[
	    {"field":"color","reverse" : true},       // sort by color in reverse order
	    {"field":"relevance"}                     // secondary sort by relevance, reverse  parameter is ignored
	],

    // fetch stored fields
	"fetchStored" : false,

	// fetch term vectors: array of field names
	"termVectors" : [],

	// partitions to send request to, default empty implies all partitions
	"partitions":[],

	// send back scoring explanation for each hit
	"explain" : false,

	// routing parameter, if set, request will be consistent hashed to the same replica for each partition
	"routeParam": null,
}
