
// example Sensei Request
{
  "query" : {
    "query_string" : { 
      "query" : "this AND that OR thus"
    }
  },

  // paging parameters
  "paging":{
  	"count" : 10,
  	"offset" : 0
  },
  
  // group by parameters   
  "groupBy" : {
    "columns" : ["category"],
    "top" : 3
  },

  // filters
  "filter" : {
    "terms" : {
      "tags" : {
        "values" : [ "blue", "pill" ],
        "excludes" : ["red"],
        "minimum_match" : 1,
        "operator" : "or",
        "_noOptimize" : false
      }
    }
  },
  
  "selections" : [
    {
      //details of this part see the selections.json
      "tags" : {
        "values" : [ "blue", "pill" ],
        "excludes" : ["red"],
        "operator" : "or"
      }
    },
    {
      "term":{
      },
    },
  ],

  // facet parameters
  "facets":{
    "category":{
      // maximum number of facet values to return
      "max" : 10,
      // minimum hit count for a given facet value
      "minCount": 1,
      // expand sibling facet values
      "expand" : false,
      // facet ordering, possible values: "hits", "val", defaults to "hits"
      "order" : "hits"
    }
  },
  
      // facet initialization parameters for runtime facets
	"facetInit":{
		"network" : {
			// parameter
			"srcId" :{
				// parameter type, valid values are: "int","string","boolean","long","bytes","double", default: "string"
				"type" : "int",
				// parameter values
				"values" : [26609850]  //e.g. "$member"
			},
			"timeOut":{
				"type" : "double",
				"values" : [2.4]			    
			},
			"coldStart":{
				"type" : "boolean",
				"values" : [true]			    
			},
			"names":{
				"type": "string",
				"values":["a", "b", "c"]
			},
			"longId":{
				"type": "long",
				"values":[1234567890, 9876543210]
			},
			"binary":{
				"type": "bytes",
				"values":["SGVsbG8gd29ybGQ="]			    
			}
		}
	},

  // sort parameters
  "sorts":[
    {"field":"color",  // sort by color in reverse order
      "order":"asc"
    },       
    {"field":"relevance",  // secondary sort by relevance, order  parameter is ignored
      "order":"desc"
    },    
  ],

  // fetch stored fields
  "fetchStored" : false,

  // fetch term vectors: array of field names
  "termVectors" : [],

  // partitions to send request to, empty list or null implies all partitions
  "partitions":[1,2],

  // send back scoring explanation for each hit
  "explain" : false,

  // routing parameter, if set, request will be consistent hashed to the same replica for each partition
  "routeParam": null,
  
  "mappings":{
    "member" : 1234
  }
}
