
// example Sensei Request
{
  "query" : {
    "query_string" : { 
      "query" : "this AND that OR thus"
    }
  },

  // paging parameters
  "from" : 0,
  "size" : 10,
  
  // group by parameters   
  "groupBy" : {
    "columns" : ["category"]
    "top" : 3
  },

  // filters
  "filter" : {
    "terms" : {
      "tags" : {
        "values" : [ "blue", "pill" ],
        "excludes" : ["red"],
        "minimum_match" : 1,
        "operator" : "or",
        "_noOptimize" : false
      }
    }
  },
  
  "selections" :{
    //details of this part see the selections.json
    "tags" : {
      "values" : [ "blue", "pill" ],
      "excludes" : ["red"],
      "operator" : "or"
    }
  },

  // facet parameters
  "facets":{
    "category":{
      // maximum number of facet values to return
      "max" : 10,
      // minimum hit count for a given facet value
      "minCount": 1,
      // expand sibling facet values
      "expand" : false,
      // facet ordering, possible values: "hits", "val", defaults to "hits"
      "order" : "hits"
    }
  },

  // sort parameters
  "sort":[
    {"color":"desc"},       // sort by color in reverse order
    "_score"                     // secondary sort by relevance, reverse  parameter is ignored
  ],

  // fetch stored fields
  "fetchStored" : false,

  // fetch term vectors: array of field names
  "fetchTermVectors" : [],

  // partitions to send request to, empty list or null implies all partitions
  "partitions":[1,2],

  // send back scoring explanation for each hit
  "explain" : false,

  // routing parameter, if set, request will be consistent hashed to the same replica for each partition
  "routeParam": null,
  
  "mappings":{
    "member" : 1234
  }
}
