
// example Sensei Request
{
	// query
	// see: queries.json for more examples
	"query" : {
	  "query_string" : { 
          "query" : "this AND that OR thus"
      }
	},

	// paging parameters
	"from" : 0,
	"size" : 10,
	
	// group by parameters   
	"groupBy" : [{
		"column" : "category",
		"top" : 3
	}]

	// filters
	"filters" : {
		"terms" : {
          "tags" : {
            "values" : [ "blue", "pill" ],
            "excludes" : ["red"],
            "minimum_match" : 1,
            "operator" : "or",
            "_noOptimize" : false
          }
        },
        "term" :{
          "color" : "red",
          "_noOptimize" : false
        },
        "range" : {
          "from" : "",
          "to" : "",
        }
	},
	
	"selections" :{
	  
	},

	// facet parameters
	"facets":{
		"category":{
			// maximum number of facet values to return
			"max" : 10,
			// minimum hit count for a given facet value
			"minCount": 1,
			// expand sibling facet values
			"expand" : false,
			// facet ordering, possible values: "hits", "val", defaults to "hits"
			"order" : "hits"
		}
	},

    // facet initialization parameters for runtime facets
	"facetInit":{
		"network" : {
			// parameter
			"srcId" :{
				// parameter type, valid values are: "int","string","boolean","long","bytes","double", default: "string"
				"type" : "int",
				// parameter values
				"values" : ["$member"]
			}
		}
	},

	// sort parameters
	"sort":[
	    {"color":"desc"},       // sort by color in reverse order
	    "_score"                     // secondary sort by relevance, reverse  parameter is ignored
	],

    // fetch stored fields
	"fetchStored" : false,

	// fetch term vectors: array of field names
	"fetchTermVectors" : [],

	// partitions to send request to, empty list or null implies all partitions
	"partitions":[],

	// send back scoring explanation for each hit
	"explain" : false,

	// routing parameter, if set, request will be consistent hashed to the same replica for each partition
	"routeParam": null,
	
	"mappings":{
	  "member" : 1234
	}
}
