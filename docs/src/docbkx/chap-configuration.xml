  <chapter xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Sensei Configuration</title>

    <section>
      <title>Overview</title>

      <para>A Sensei node is configured by a set of files. These files
      describe a Sensei node in terms of data models, server configuration,
      indexing tuning parameters, customizations etc.</para>

      <para>This document aims to describe how parts are pieced together via
      these configuration files.</para>
    </section>

    <section>
      <title>Data Modeling</title>

      <para>Data models are described in the
      <filename>schema.xml</filename> file (XSD definition:
      http://javasoze.github.com/sensei/schema/sensei-schema.xsd.)</para>

      <para>The demo example can be found here:
      https://github.com/javasoze/sensei/blob/master/conf/schema.xml</para>

      <para>The schema file is composed by 2 sections:</para>

      <orderedlist spacing="compact">
        <listitem>
          <para>table</para>
        </listitem>

        <listitem>
          <para>facets</para>
        </listitem>
      </orderedlist>

      <section>
        <title>Table Schema</title>

        <para>A Sensei instance can be viewed as a giant table with many
        columns and many rows. The concept of such table directly correlates
        to that of traditional RDBMS's.</para>

        <para>A table may have the following attributes:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para><emphasis role="bold">uid</emphasis> (mandatory) -
            defines the name of the primary key field.  This must be of
            type <code>long</code>.</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">delete-field</emphasis>
            (optional) - defines the field that would indicate a delete
            event (we will get back to this later).</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">skip-field</emphasis> (optional)
            - defines the field that would indicate a skipping event (we
            will get back to this later).</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">src-data-store</emphasis>
            (optional) - defines the format of how the stored field is
            saved.</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">compress-src-data</emphasis>
            (optional) - defines if the stored field is
            compressed.</para>
          </listitem>
        </itemizedlist>

        <para>A table is also composed of a set of columns. Each column has a
        name and a type.</para>

        <para>These are the supported types:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para><emphasis role="bold">string</emphasis> - value is a
            string, e.g. "<code>abc</code>"</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">int</emphasis> - integer value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">long</emphasis> - long value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">short</emphasis> - short value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">float</emphasis> - a floating point value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">double</emphasis> - double value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">char</emphasis> - a character</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">date</emphasis> - a date value,
            must be accompanied by a format string to be used to parse a
            data string</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">text</emphasis> - a searchable
            text segment, standard Lucene indexing specification can
            also be specified here, e.g. <code>index="ANALYZED"</code>,
            <code>termvector="NO"</code> etc.</para>
          </listitem>
        </itemizedlist>

        <para>A column that is not of type "text" is considered a
        <emphasis>meta</emphasis> column.  Any meta column can be
        specified to be either <code>single</code> (default) or
        <code>multi</code>. When a column is specified to be
        <code>multi</code>, e.g. <code>multi="true"</code>, this means
        given a row, it can have more than 1 value for this column. A
        delimited string can be provided to help the indexer to parse
        the values (default delimiter is ",", for example, to specify a
        different delimiter to be ":", we can do this by
        <code>delimiter=":"</code>)</para>

        <para>Here is an example of the table schema (see
        https://github.com/javasoze/sensei/blob/master/conf/schema.xml):</para>

        <programlisting><![CDATA[  <table uid="id" delete-field="" skip-field="">
    <column name="color" type="string" />
    <column name="category" type="string" />
    <column name="city" type="string" />
    <column name="makemodel" type="string" />
    <column name="year" type="int" />
    <column name="price" type="float" />
    <column name="mileage" type="int" />
    <column name="tags" type="string" multi="true" delimiter=","/>
    <column name="contents" type="text" index="ANALYZED"
            store="NO" termvector="NO"/>
  </table>]]></programlisting>

        <section>
          <title>JSON</title>

          <para>By default, data objects inserted into Sensei are JSON
          objects.</para>

          <para><emphasis role="bold">Example</emphasis>:</para>

          <para>Given the following table definition:</para>

          <programlisting>  &lt;table uid="id"&gt;
    &lt;column name="color" type="string" /&gt;
    &lt;column name="year" type="int" /&gt;
    &lt;column name=tag" type="string" multi="true" /&gt;
    &lt;column name="description" type="text" index="ANALYZED" store="NO" /&gt;
  &lt;/table&gt;
</programlisting>

          <para>The following table shows as an example how a json object is
          mapped into the table:</para>

          <para>
            <emphasis role="bold">JSON object</emphasis>
          </para>

          <programlisting>  {
    id:1
    color:"red",
    year:2000,
    tag:"cool,leather",
    description:"i love this car"
  }</programlisting>

          <para>
            <emphasis role="bold">Table view</emphasis>
          </para>

          <informaltable border="2" cellpadding="6" cellspacing="0"
                         frame="hsides" rules="groups">
            <colgroup>
              <col align="left" />

              <col align="left" />

              <col align="left" />

              <col align="left" />

              <col align="left" />
            </colgroup>

            <thead>
              <tr>
                <th align="left" scope="col">id</th>

                <th align="left" scope="col">color</th>

                <th align="left" scope="col">year</th>

                <th align="left" scope="col">tag</th>

                <th align="left" scope="col">description</th>
              </tr>
            </thead>

            <tbody>
              <tr>
                <td align="left">1</td>

                <td align="left">red</td>

                <td align="left">2000</td>

                <td align="left">cool, leather</td>

                <td align="left">i love this car</td>
              </tr>
            </tbody>
          </informaltable>
        </section>

        <section>
          <title>Deletes</title>

          <para>To deleted a row from Sensei, simply insert a data object with
          the specified delete-field set to true.</para>

          <para>
            <emphasis role="bold">Example:</emphasis>
          </para>

          <para>Given the table schema:</para>

          <programlisting>  &lt;table uid="id" delete-field="isDelete"&gt;
  ...
  &lt;/table&gt;
</programlisting>

          <para>The following JSON object would delete the row where
          id=5:</para>

          <programlisting>  {
    id:5,
    isDelete:"true"
  }</programlisting>
        </section>

        <section>
          <title>Skips</title>

          <para>In cases where runtime logic decides whether a data object
          should be skipped, the skip field can be useful.</para>

          <para>
            <emphasis role="bold">Example:</emphasis>
          </para>

          <para>Given the table schema:</para>

          <programlisting>  &lt;table uid="id" skip-field="isSkip"&gt;
  ...
  &lt;/table&gt;</programlisting>

          <para>The following JSON object would be skipped from
          indexing:</para>

          <programlisting>  {
    id:7,
    isSkip:"true"
  }</programlisting>
        </section>

        <section>
          <title>Source JSON</title>

          <para>For many cases, you may want to keep the original source
          JSON objects in the index.  You can </para>
        </section>


      </section>

      <section>
        <title>Facet Schema</title>

        <para>The second section is the facet schema, which defines how
        columns can be queried.</para>

        <para>If we think of the table section defines how data is added into
        Sensei, then the facet section describes how these data can be
        queried.</para>

        <para>The facet sections is composed of a set of facet
        definitions.</para>

        <para>A facet definition requires a name and a type.</para>

        <para>Possible types:</para>

        <itemizedlist spacing="compact">
          <listitem>
            <para><emphasis role="bold">simple</emphasis>: simplest facet, 1 row = 1 discrete
            value</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">path</emphasis>: hierarchical facet, e.g. a/b/c</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">range</emphasis>: range facet, used to support range
            queries</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">multi</emphasis>: 1 row = N discrete values</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">compact-multi</emphasis>: similar to multi, but possible
            values are limited to 32</para>
          </listitem>

          <listitem>
            <para><emphasis role="bold">custom</emphasis>: any user defined facet type (We will
            cover this in advanced section)</para>
          </listitem>
        </itemizedlist>

        <para>Example: <link
        xlink:href="https://github.com/javasoze/sensei/blob/master/conf/schema.xml">https://github.com/javasoze/sensei/blob/master/conf/schema.xml</link></para>

        <section>
          <title>Optional Attributes</title>

          <section>
            <title>Column</title>

            <para>The column attribute references the column names
            defined in the table section. By default, the value of the
            <code>name</code> attribute is used.</para>

            <para>This can be useful if you want to name the facet name to be
            different from the defined column name, or if you want to have
            multiple facets defined on the same column.</para>
          </section>

          <section>
            <title>Depends</title>

            <para>This is a comma delimited string denoting a set of
            facet names this facet is to be depended on.</para>

            <para>When <code>depends</code> is specified, Sensei guarantees
            the depending facets are loaded before this facet.</para>

            <para>This is also how Composite Facets are constructed.
            (Another advanced topic).</para>
          </section>

          <section>
            <title>Dynamic</title>

            <para>Dynamic facets are useful when data layout is not known
            until query time.</para>

            <para>Some examples:</para>

            <itemizedlist spacing="compact">
              <listitem>
                <para>searcher's social network</para>
              </listitem>

              <listitem>
                <para>dynamic time ranges from when the search request is
                issued</para>
              </listitem>
            </itemizedlist>

            <para>This is another advanced topic to be discussed later.</para>
          </section>
        </section>

        <section>
          <title>Parameters</title>

          <para>A facet can be configured via a list of parameters.
          Parameters are needed for a facet under some situations, for
          examples:</para>

          <itemizedlist spacing="compact">
            <listitem>
              <para>For path facets, separator strings can be
              configured</para>
            </listitem>

            <listitem>
              <para>For range facets, predefined ranges can be
              configured</para>
            </listitem>
          </itemizedlist>

          <para>The parameters can be specified via element
          <code>params</code>, which contains a list of elements called
          <code>param</code>.  For each <code>param</code>, two
          attributes can be specified: <code>name</code> and
          <code>value</code>.</para>

          <para>How parameters are interpreted is dependent on the facet
          type.</para>

          <para>Here is an example of a facet with a list of predefined
          ranges: </para>

          <programlisting><![CDATA[  <facet name="year" type="range">
    <params>
      <param name="range" value="1993-1994"/>
      <param name="range" value="1995-1996"/>
      <param name="range" value="1997-1998"/>
      <param name="range" value="1999-2000"/>
      <param name="range" value="2001-2002"/>
    </params>
  <facet>]]></programlisting>

        </section>

        <section>
          <title>Customized Facets</title>

          <para>We understand we cannot possibly cover all use cases
          using a short list of predefined facet handlers.  It is
          necessary to allow users to define their own customized facets
          for different reasons.</para>

          <para>If a customized facet handler is required for a column
          (or multiple columns), you can set the facet <code>type</code>
          to <code>custom</code>, and declare a bean for the facet
          handler in file <filename>custom-facets.xml</filename>.</para>

          <para>For example, if a customized facet called
          <code>time</code> is declared in
          <filename>schema.xml</filename> like this: </para>

          <programlisting><![CDATA[  <facet name="time" type="custom" dynamic="false"/>]]></programlisting>

          <para>and the implementation of the facet handler is in class
          <code>com.example.facets.TimeFacetHandler</code>, then you
          should include the following line in file
          <filename>custom-facets.xml</filename> <footnote>
          <para>Here we assume that the time facet handler does not take
          any arguments. </para> </footnote>:
          </para>

          <programlisting><![CDATA[  <bean id="time" class="com.example.facets.TimeFacetHandler"/>]]></programlisting>

          <para>The id of the bean should match the name of the
          facet.</para>

        </section>
      </section>
    </section>

    <!-- Data Modeling -->

    <section>
      <title>System Configuration</title>

      <para>The Sensei system is configured via the
      <filename>sensei.properties</filename>, which consists of the
      following sections:</para>

      <orderedlist spacing="compact">
        <listitem>
          <para><emphasis role="bold">server</emphasis>: e.g. port to
          listen on, rpc paramters etc.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">cluster</emphasis>: cluster
          manager, sharding, request routing etc.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">indexing</emphasis>: data
          interpretation, tokenization, indexer type etc.</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">broker</emphasis>: e.g. entry into
          Sensei system</para>
        </listitem>

        <listitem>
          <para><emphasis role="bold">plugins</emphasis>:
          e.g. customized facet handlers</para>
        </listitem>
      </orderedlist>

      <para>Below is the configuration file for the demo (available from
      <link
      xlink:href="https://github.com/javasoze/sensei/blob/master/conf/sensei.properties">https://github.com/javasoze/sensei/blob/master/conf/sensei.properties</link></para>

      <programlisting><![CDATA[# sensei node parameters
sensei.node.id=1
sensei.node.partitions=0,1

# sensei network server parameters
sensei.server.port=1234
sensei.server.requestThreadCorePoolSize=20
sensei.server.requestThreadMaxPoolSize=70
sensei.server.requestThreadKeepAliveTimeSecs=300

# sensei cluster parameters
sensei.cluster.name=sensei
sensei.cluster.url=localhost:2181
sensei.cluster.timeout=30000

# sensei indexing parameters
sensei.index.directory = index/cardata

sensei.index.batchSize = 10000
sensei.index.batchDelay = 300000
sensei.index.maxBatchSize = 10000
sensei.index.realtime = true
sensei.index.freshness = 10000

# index manager parameters

sensei.index.manager.default.maxpartition.id = 1
sensei.index.manager.default.type = file
sensei.index.manager.default.file.path = data/cars.json

# plugins: from plugins.xml

# analyzer, default: StandardAnalyzer
# sensei.index.analyzer = myanalyzer

# similarity, default: DefaultSimilarity
# sensei.index.similarity = mysimilarity

# indexer type, zoie/hourglass/<custom name>

sensei.indexer.type=zoie

#extra parameters for hourglass

#sensei.indexer.hourglass.schedule

# retention
#sensei.indexer.hourglass.timethreshold

# frequency for a roll, minute/hour/day
#sensei.indexer.hourglass.frequency

# sensei
# version comparator, default: ZoieConfig.DefaultVersionComparator
# sensei.version.comparator = myVersionComparator

# extra services
sensei.plugin.services =

# broker properties
sensei.broker.port = 8080
sensei.broker.minThread = 50
sensei.broker.maxThread = 100
sensei.broker.maxWaittime = 2000

sensei.broker.webapp.path=src/main/webapp
sensei.search.cluster.name = sensei
sensei.search.cluster.zookeeper.url = localhost:2181
sensei.search.cluster.zookeeper.conn.timeout = 30000
sensei.search.cluster.network.conn.timeout = 1000
sensei.search.cluster.network.write.timeout = 150
sensei.search.cluster.network.max.conn.per.node = 5
sensei.search.cluster.network.stale.timeout.mins = 10
sensei.search.cluster.network.stale.cleanup.freq.mins = 10

# custom router factory
# sensei.search.router.factory = myRouterFactory]]>
</programlisting>

      <section>
        <title>Server Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.node.id</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: None (this is a required property) </para>
                </listitem>
              </itemizedlist>

              <para>This is the node ID of the Sensei node in a
              cluster.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.node.partitions</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: comma separated integers or ranges</para>
                </listitem>
                <listitem>
                  <para>Default: None (this is a required property) </para>
                </listitem>
              </itemizedlist>

              <para>This specifies the partitions IDs this the Sensei
              server is going to handle.  Partition IDs can be given as
              either integer numbers or ranges, separated by commas.
              For example: <code>sensei.node.partitions=1,2,5-8</code>
              denotes that the Sensei server has six partitions:
              1,2,5,6,7,8.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.server.port</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: None (this is a required property) </para>
                </listitem>
              </itemizedlist>

              <para>This is the Sensei server port number.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.server.requestThreadCorePoolSize</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 20</para>
                </listitem>
              </itemizedlist>

              <para>This is the core size of thread pool used to execute
              requests.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.server.requestThreadMaxPoolSize</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 70</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum size of thread pool used to
              execute requests.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.server.requestThreadKeepAliveTimeSecs</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 300</para>
                </listitem>
              </itemizedlist>

              <para>This is the length of time in seconds to keep an
              idle request thread alive.</para>
            </listitem>
          </varlistentry>

        </variablelist>

      </section>

      <section>
        <title>Cluster Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.cluster.name</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None (required)</para>
                </listitem>
              </itemizedlist>

              <para>This is the name of the Sensei server cluster.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.cluster.url</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None (required)</para>
                </listitem>
              </itemizedlist>

              <para>This is the URL to be used to connect to the Sensei
              cluster.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.cluster.timeout</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 300000</para>
                </listitem>
              </itemizedlist>

              <para>This is the session timeout value, in milliseconds,
              that is passed to ZooKeeper.</para>
            </listitem>
          </varlistentry>

        </variablelist>

      </section>

      <section>
        <title>Indexing Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.directory</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None (required)</para>
                </listitem>
              </itemizedlist>

              <para>This is the directory used to save the index.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.batchSize</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 10000</para>
                </listitem>
              </itemizedlist>

              <para>This is the batch size used by Zoie to control the
              pace of data event consumption.  This batch size is the
              <emphasis>soft</emphasis> size limit of each event batch.
              If the events come in too fast and the limit is already
              reached, then Zoie will block the incoming events until
              the number of buffered events drop below this limit after
              some of the events are sent to the background data
              consumer.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.batchDelay</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 300000</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum time to wait in milliseconds
              before flushing index events to disk.  The default value
              is 5 minutes.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.maxBatchSize</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 10000</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum batch size.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.realtime</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: boolean</para>
                </listitem>
                <listitem>
                  <para>Default: true</para>
                </listitem>
              </itemizedlist>

              <para>This specifies whether the indexing mode is
              real-time. </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.freshness</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: long</para>
                </listitem>
                <listitem>
                  <para>Default: 500</para>
                </listitem>
              </itemizedlist>

              <para>This controls the freshness of entries in the index
              reader cache.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.indexer.type</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the internal indexer type used by the Sensei
              cluster.  Currently only two options are supported:
              <code>zoie</code> and <code>hourglass</code>.  If
              <code>hourglass</code> is used, three more properties need
              to be set too:</para>

              <itemizedlist spacing="compact">
                <listitem>
                  <para>sensei.indexer.hourglass.schedule</para>
                </listitem>
                <listitem>
                  <para>sensei.indexer.hourglass.timethreshold</para>
                </listitem>
                <listitem>
                  <para>sensei.indexer.hourglass.frequency</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.indexer.hourglass.schedule</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is a string that specifies Hourglass rolling
              forward schedule.  The format of this string is "<code>ss
              mm hh</code>", meaning at <code>hh:mm:ss time</code> of
              the day that we roll forward for
              <emphasis>daily</emphasis> rolling.  If it is
              <emphasis>hourly</emphasis> rolling, we roll forward at
              <code>mm:ss</code> time of the hour.  If it is
              <emphasis>minutely</emphasis> rolling, we roll forward at
              <code>ss</code> seond of the minute.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.indexer.hourglass.trimthreshold</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 14</para>
                </listitem>
              </itemizedlist>

              <para>This is the retention period for how long we are
              going to keep the events in the index.  The unit is the
              rolling period.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.indexer.hourglass.frequency</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: "<code>day</code>"</para>
                </listitem>
              </itemizedlist>

              <para>This is the rolling forward frequency.  It has to be
              one of the following three values:</para>
              <itemizedlist spacing="compact">
                <listitem>
                  <para><code>day</code></para>
                </listitem>
                <listitem>
                  <para><code>hour</code></para>
                </listitem>
                <listitem>
                  <para><code>minute</code></para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>

        </variablelist>

      </section>

      <section>
        <title>Broker Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.broker.port</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the port number of the Sensei broker.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.broker.webapp.path</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the resource base of the broker web
              application.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.broker.minThread</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 20</para>
                </listitem>
              </itemizedlist>

              <para>This is the core size of thread pool used by the
              broker to execute requests.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.broker.maxThread</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 50</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum size of thread pool used by the
              broker to execute requests.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.broker.maxWaittime</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 2000</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum idle time in milliseconds for a
              thread on brokers.  Threads that are idle for longer than
              this period may be stopped.</para>
            </listitem>
          </varlistentry>

        </variablelist>

      </section>


      <section>
        <title>Client Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.zookeeper.url</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the ZooKeeper URL for the network client of
              a Sensei cluster.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.name</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the Sensei cluster name, the service name
              for the network client.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.zookeeper.conn.timeout</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 10000</para>
                </listitem>
              </itemizedlist>

              <para>This is the ZooKeeper network client session timeout
              value in milliseconds.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.network.conn.timeout</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 1000</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum number of milliseconds to allow
              a connection attempt to take.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.network.write.timeout</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 150</para>
                </listitem>
              </itemizedlist>

              <para>This is the number of milliseconds a request can be
              queued for write before it is considered stale.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.network.max.conn.per.node</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 5</para>
                </listitem>
              </itemizedlist>

              <para>This is the maximum number of open connections to a
              node.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.network.stale.timeout.mins</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 10</para>
                </listitem>
              </itemizedlist>

              <para>This is the number of minutes to keep a request that
              is waiting for a response.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.search.cluster.network.stale.cleanup.freq.mins</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: int</para>
                </listitem>
                <listitem>
                  <para>Default: 10</para>
                </listitem>
              </itemizedlist>

              <para>This is the frequency to clean up stale requests.</para>
            </listitem>
          </varlistentry>

        </variablelist>
        
      </section>

      <section>
        <title>Plug-in Properties</title>

        <variablelist>
          <?dbfo list-presentation="blocks"?>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.analyzer</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: ""</para>
                </listitem>
              </itemizedlist>

              <para>This specifies the bean ID of the analyzer plug-in
              for analyzing text.  If not specified,
              <code>org.apache.lucene.analysis.standard.StandardAnalyzer</code>
              will be used.</para>
            </listitem>
          </varlistentry>


          <varlistentry>
            <term><emphasis role="bold">sensei.index.similarity</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: ""</para>
                </listitem>
              </itemizedlist>

              <para>This specifies the bean ID of similarity plug-in for
              Lucene scoring.  If not specified,
              <code>org.apache.lucene.search.DefaultSimilarity</code> is
              used.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.interpreter</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: ""</para>
                </listitem>
              </itemizedlist>

              <para>This specifies the bean ID of the interpretor of
              Zoie indexables.  If not specified,
              <code>com.sensei.indexing.api.DefaultJsonSchemaInterpreter</code>
              is to be used.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.manager.default.type</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the type of the index manager data provider
              that will be used by Sensei.  Currently the following
              types are supported:</para>

              <itemizedlist spacing="compact">
                <listitem>
                  <para><code>file</code></para>
                </listitem>
                <listitem>
                  <para><code>kafka</code></para>
                </listitem>
                <listitem>
                  <para><code>custom</code></para>
                </listitem>
              </itemizedlist>

              <para>If a customized index manager is provided, property
              <code>sensei.index.manager.default.custom</code> and
              <code>sensei.index.manager.default.filter</code> should be
              set too.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.manager.default.custom</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the bean ID of the customized data provider
              used by user provided index manager.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><emphasis role="bold">sensei.index.manager.default.filter</emphasis></term>
            <listitem>
              <itemizedlist spacing="compact">
                <listitem>
                  <para>Type: String</para>
                </listitem>
                <listitem>
                  <para>Default: None</para>
                </listitem>
              </itemizedlist>

              <para>This is the bean ID of the JSON filter used by user
              provided index manager.</para>
            </listitem>
          </varlistentry>

        </variablelist>

      </section>
    </section>

    <!-- System Configurations -->

    <section>
      <title>Extensions</title>

      <para>(TO BE FINISHED)</para>
    </section>
  </chapter>